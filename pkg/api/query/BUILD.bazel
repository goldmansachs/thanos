load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "query",
    srcs = [
        "grpc.go",
        "v1.go",
    ],
    importpath = "github.com/thanos-io/thanos/pkg/api/query",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/api",
        "//pkg/api/query/querypb",
        "//pkg/exemplars",
        "//pkg/exemplars/exemplarspb",
        "//pkg/extprom/http",
        "//pkg/extpromql",
        "//pkg/gate",
        "//pkg/logging",
        "//pkg/metadata",
        "//pkg/metadata/metadatapb",
        "//pkg/query",
        "//pkg/rules",
        "//pkg/rules/rulespb",
        "//pkg/runutil",
        "//pkg/store",
        "//pkg/store/labelpb",
        "//pkg/store/storepb",
        "//pkg/store/storepb/prompb",
        "//pkg/targets",
        "//pkg/targets/targetspb",
        "//pkg/tenancy",
        "//pkg/tracing",
        "@com_github_go_kit_log//:log",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_pkg_errors//:errors",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_common//route",
        "@com_github_prometheus_prometheus//model/labels",
        "@com_github_prometheus_prometheus//model/timestamp",
        "@com_github_prometheus_prometheus//promql",
        "@com_github_prometheus_prometheus//promql/parser",
        "@com_github_prometheus_prometheus//storage",
        "@com_github_prometheus_prometheus//util/annotations",
        "@com_github_prometheus_prometheus//util/stats",
        "@com_github_thanos_io_promql_engine//api:go_default_library",
        "@com_github_thanos_io_promql_engine//engine:go_default_library",
        "@com_github_thanos_io_promql_engine//logicalplan:go_default_library",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

alias(
    name = "go_default_library",
    actual = ":query",
    visibility = ["//visibility:public"],
)

go_test(
    name = "query_test",
    srcs = [
        "grpc_test.go",
        "v1_test.go",
    ],
    embed = [":query"],
    deps = [
        "//pkg/api",
        "//pkg/api/query/querypb",
        "//pkg/compact",
        "//pkg/component",
        "//pkg/extpromql",
        "//pkg/gate",
        "//pkg/query",
        "//pkg/rules/rulespb",
        "//pkg/store",
        "//pkg/store/labelpb",
        "//pkg/store/storepb",
        "//pkg/store/storepb/testutil",
        "//pkg/testutil/custom",
        "//pkg/testutil/e2eutil",
        "//pkg/testutil/testpromcompatibility",
        "@com_github_efficientgo_core//errors",
        "@com_github_efficientgo_core//testutil",
        "@com_github_go_kit_log//:log",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_common//route",
        "@com_github_prometheus_prometheus//model/histogram",
        "@com_github_prometheus_prometheus//model/labels",
        "@com_github_prometheus_prometheus//model/timestamp",
        "@com_github_prometheus_prometheus//promql",
        "@com_github_prometheus_prometheus//promql/parser",
        "@com_github_prometheus_prometheus//rules",
        "@com_github_prometheus_prometheus//storage",
        "@com_github_prometheus_prometheus//tsdb",
        "@com_github_prometheus_prometheus//tsdb/chunkenc",
        "@com_github_prometheus_prometheus//tsdb/chunks",
        "@com_github_prometheus_prometheus//util/annotations",
        "@com_github_prometheus_prometheus//util/gate",
        "@com_github_prometheus_prometheus//util/stats",
        "@com_github_thanos_io_promql_engine//engine:go_default_library",
        "@com_github_thanos_io_promql_engine//logicalplan:go_default_library",
        "@com_github_thanos_io_promql_engine//query:go_default_library",
    ],
)
