load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "receive",
    srcs = [
        "config.go",
        "handler.go",
        "hashring.go",
        "head_series_limiter.go",
        "limiter.go",
        "limiter_config.go",
        "multitsdb.go",
        "request_limiter.go",
        "writer.go",
    ],
    importpath = "github.com/thanos-io/thanos/pkg/receive",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/api",
        "//pkg/api/status",
        "//pkg/block/metadata",
        "//pkg/component",
        "//pkg/errors",
        "//pkg/errutil",
        "//pkg/exemplars",
        "//pkg/extkingpin",
        "//pkg/extprom",
        "//pkg/extprom/http",
        "//pkg/gate",
        "//pkg/httpconfig",
        "//pkg/logging",
        "//pkg/promclient",
        "//pkg/runutil",
        "//pkg/server/http/middleware",
        "//pkg/shipper",
        "//pkg/store",
        "//pkg/store/labelpb",
        "//pkg/store/storepb",
        "//pkg/store/storepb/prompb",
        "//pkg/tracing",
        "@com_github_cespare_xxhash//:xxhash",
        "@com_github_go_kit_log//:log",
        "@com_github_go_kit_log//level",
        "@com_github_gogo_protobuf//proto",
        "@com_github_jpillora_backoff//:backoff",
        "@com_github_klauspost_compress//s2",
        "@com_github_mwitkow_go_conntrack//:go-conntrack",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_pkg_errors//:errors",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_common//route",
        "@com_github_prometheus_prometheus//model/exemplar",
        "@com_github_prometheus_prometheus//model/labels",
        "@com_github_prometheus_prometheus//model/relabel",
        "@com_github_prometheus_prometheus//storage",
        "@com_github_prometheus_prometheus//tsdb",
        "@com_github_thanos_io_objstore//:objstore",
        "@in_gopkg_fsnotify_v1//:fsnotify_v1",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_sync//errgroup",
        "@org_uber_go_atomic//:atomic",
    ],
)

alias(
    name = "go_default_library",
    actual = ":receive",
    visibility = ["//visibility:public"],
)

go_test(
    name = "receive_test",
    srcs = [
        "config_test.go",
        "handler_test.go",
        "hashring_test.go",
        "limiter_config_test.go",
        "limiter_test.go",
        "multitsdb_test.go",
        "receive_test.go",
        "request_limiter_test.go",
        "writer_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":receive"],
    deps = [
        "//pkg/block/metadata",
        "//pkg/errutil",
        "//pkg/exemplars/exemplarspb",
        "//pkg/extkingpin",
        "//pkg/runutil",
        "//pkg/store",
        "//pkg/store/labelpb",
        "//pkg/store/storepb",
        "//pkg/store/storepb/prompb",
        "//pkg/testutil",
        "@com_github_alecthomas_units//:units",
        "@com_github_efficientgo_tools_core//pkg/testutil",
        "@com_github_go_kit_log//:log",
        "@com_github_gogo_protobuf//proto",
        "@com_github_golang_snappy//:snappy",
        "@com_github_pkg_errors//:errors",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_common//model",
        "@com_github_prometheus_prometheus//model/exemplar",
        "@com_github_prometheus_prometheus//model/labels",
        "@com_github_prometheus_prometheus//model/metadata",
        "@com_github_prometheus_prometheus//model/relabel",
        "@com_github_prometheus_prometheus//storage",
        "@com_github_prometheus_prometheus//tsdb",
        "@com_github_stretchr_testify//require",
        "@com_github_thanos_io_objstore//:objstore",
        "@in_gopkg_yaml_v3//:yaml_v3",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_sync//errgroup",
    ],
)
